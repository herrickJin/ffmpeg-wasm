import{F as m}from"./vendor-D-QKHKUd.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();const g=a=>new Promise((e,t)=>{const i=new FileReader;i.onload=()=>{const{result:r}=i;r instanceof ArrayBuffer?e(new Uint8Array(r)):e(new Uint8Array)},i.onerror=r=>{var o,s;t(Error(`File could not be read! Code=${((s=(o=r==null?void 0:r.target)==null?void 0:o.error)==null?void 0:s.code)||-1}`))},i.readAsArrayBuffer(a)}),p=async a=>{let e;if(typeof a=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(a)?e=atob(a.split(",")[1]).split("").map(t=>t.charCodeAt(0)):e=await(await fetch(a)).arrayBuffer();else if(a instanceof URL)e=await(await fetch(a)).arrayBuffer();else if(a instanceof File||a instanceof Blob)e=await g(a);else return new Uint8Array;return new Uint8Array(e)};class y{constructor(){this.ffmpeg=null,this.originalFile=null,this.isConverting=!1,this.startTime=null,this.mediaSource=null,this.sourceBuffer=null,this.supportedMimeType=null,this.streamQueue=[],this.isStreaming=!1,this.performanceMetrics={conversionTime:0,originalSize:0,convertedSize:0,memoryUsage:0},this.debugMode=this.getDebugMode(),this.bufferMonitor={totalChunksAdded:0,totalChunksProcessed:0,totalBytesProcessed:0,lastErrorTime:null,consecutiveErrors:0,bufferHealth:"good",lastBufferCheck:Date.now()},this.performanceMonitor=null,this.setupEventListeners(),this.log("FFmpeg WASM Demo 开始初始化"),this.debugMode&&this.log("调试模式已启用","debug"),this.initFFmpeg()}async init(){await this.initFFmpeg(),this.setupEventListeners(),this.log("FFmpeg WASM Demo 初始化完成")}async initFFmpeg(){this.log("正在加载 FFmpeg WASM...");try{this.ffmpeg=new m,this.ffmpeg.on("log",e=>{this.log(`FFmpeg: ${e.message}`)}),this.ffmpeg.on("progress",e=>{this.updateProgress(e)}),await this.ffmpeg.load({corePath:"https://unpkg.com/@ffmpeg/core@0.12.6/dist/ffmpeg-core.js"}),this.log("FFmpeg WASM 加载完成"),this.originalFile&&(document.getElementById("convertBtn").disabled=!1,this.log("转码功能已启用"))}catch(e){this.log(`FFmpeg WASM 加载失败: ${e.message}`,"error"),console.error("FFmpeg 加载失败:",e),this.log("文件上传功能已启用，但转码功能可能不可用","warning")}}async checkFilesystemHealth(){try{const e="test_fs_health.tmp",t=new Uint8Array([1,2,3,4,5]);return await this.ffmpeg.writeFile(e,t),await this.ffmpeg.deleteFile(e),this.log("FFmpeg 文件系统健康检查通过"),!0}catch(e){return this.log(`FFmpeg 文件系统健康检查失败: ${e.message}`,"error"),!1}}getDebugMode(){const e=new URLSearchParams(window.location.search);if(e.has("debug"))return e.get("debug")==="true";try{const t=localStorage.getItem("ffmpeg-debug-mode");if(t!==null)return t==="true"}catch{}return!1}setupEventListeners(){const e=document.getElementById("uploadSection"),t=document.getElementById("fileInput"),i=document.getElementById("convertBtn"),r=document.getElementById("stopStreamingBtn"),o=document.getElementById("crf"),s=document.getElementById("crfValue");if(!e||!t||!i){this.log("错误: 无法找到页面元素","error");return}this.log("设置事件监听器..."),e.addEventListener("click",()=>{this.log("点击上传区域"),t.click()}),e.addEventListener("dragover",n=>{n.preventDefault(),e.classList.add("dragover"),this.log("拖拽文件到上传区域")}),e.addEventListener("dragleave",()=>{e.classList.remove("dragover"),this.log("拖拽离开上传区域")}),e.addEventListener("drop",n=>{n.preventDefault(),e.classList.remove("dragover"),this.log("文件已拖拽到上传区域");const u=n.dataTransfer.files;u.length>0&&this.handleFileSelect(u[0])}),t.addEventListener("change",n=>{this.log("文件选择器发生变化"),n.target.files.length>0&&this.handleFileSelect(n.target.files[0])}),i.addEventListener("click",()=>{this.isConverting||this.startConversion()}),r&&r.addEventListener("click",()=>{this.stopStreaming(),r.style.display="none",i.style.display="block"}),o.addEventListener("input",n=>{s.textContent=n.target.value}),document.addEventListener("keydown",n=>{n.ctrlKey&&n.shiftKey&&n.key==="D"&&(n.preventDefault(),this.toggleDebugMode())})}toggleDebugMode(){this.debugMode=!this.debugMode;try{localStorage.setItem("ffmpeg-debug-mode",this.debugMode.toString())}catch{console.warn("无法保存调试模式设置到本地存储")}const e=this.debugMode?"已启用":"已禁用";this.log(`调试模式${e}`,"info"),this.debugMode&&(this.log("当前系统状态:","debug"),this.log(`- FFmpeg 状态: ${this.ffmpeg?"已加载":"未加载"}`,"debug"),this.log(`- 是否正在转码: ${this.isConverting}`,"debug"),this.log(`- 是否正在流式播放: ${this.isStreaming}`,"debug"),this.log(`- 队列长度: ${this.streamQueue.length}`,"debug"),this.log(`- MediaSource 状态: ${this.mediaSource?this.mediaSource.readyState:"不存在"}`,"debug"),this.log(`- SourceBuffer 状态: ${this.sourceBuffer?"存在":"不存在"}`,"debug"))}handleFileSelect(e){if(!e.type.startsWith("video/")){this.log("请选择视频文件","error");return}this.originalFile=e,this.performanceMetrics.originalSize=e.size,this.displayOriginalVideo(e);const t=document.getElementById("convertBtn");this.ffmpeg?(t.disabled=!1,this.log(`已选择文件: ${e.name} (${this.formatFileSize(e.size)})`)):(t.disabled=!0,this.log(`已选择文件: ${e.name} (${this.formatFileSize(e.size)})`,"warning"),this.log("FFmpeg 正在加载中，请稍后再试","warning"))}displayOriginalVideo(e){const t=document.getElementById("originalVideoContainer"),i=document.createElement("video");i.src=URL.createObjectURL(e),i.controls=!0,i.style.maxWidth="100%",i.style.maxHeight="400px",t.innerHTML="",t.appendChild(i),i.addEventListener("loadedmetadata",()=>{this.log(`原始视频信息: ${i.videoWidth}x${i.videoHeight}, ${i.duration.toFixed(2)}秒`)})}async startConversion(){if(!this.originalFile||this.isConverting)return;this.isConverting=!0,this.startTime=performance.now();const e=document.getElementById("convertBtn"),t=document.getElementById("stopStreamingBtn"),i=document.getElementById("progressSection"),r=document.getElementById("streamingMode").value;e.innerHTML='转码中<span class="loading"></span>',e.disabled=!0,i.style.display="block",r==="realtime"&&(e.style.display="none",t.style.display="block"),this.log("开始转码...");try{await this.convertVideo(),this.log("转码完成")}catch(o){this.log(`转码失败: ${o.message}`,"error"),console.error("转码失败:",o)}finally{this.isConverting=!1,e.innerHTML="开始转码",e.disabled=!1,e.style.display="block",t.style.display="none"}}async convertVideo(){const e=document.getElementById("outputFormat").value,t=document.getElementById("videoCodec").value,i=document.getElementById("crf").value,r=document.getElementById("preset").value,o=document.getElementById("threads").value,s=document.getElementById("performanceMode").value,n=document.getElementById("hardwareAcceleration").value,u=document.getElementById("streamingMode").value,l=`converted_${Date.now()}.${e}`;if(this.log("=== 转码开始 ==="),this.log(`输入文件: ${this.originalFile.name} (${this.formatFileSize(this.originalFile.size)})`),this.log(`输出格式: ${e}`),this.log(`视频编码器: ${t}`),this.log(`质量设置: CRF=${i}`),this.log(`速度预设: ${r}`),this.log(`线程数: ${o==="0"?"自动":o+" 线程"}`),this.log(`性能模式: ${this.getPerformanceModeText(s)}`),this.log(`硬件加速: ${this.getHardwareAccelerationText(n)}`),this.log(`流式处理: ${this.getStreamingModeText(u)}`),this.log("检查 FFmpeg 文件系统状态..."),!await this.checkFilesystemHealth())throw new Error("FFmpeg 文件系统状态异常，无法进行转码");this.log("正在将文件写入 FFmpeg 文件系统...");try{await this.ffmpeg.writeFile("input.mp4",await p(this.originalFile)),this.log("文件写入完成")}catch(c){throw this.log(`文件写入失败: ${c.message}`,"error"),new Error(`无法写入文件到FFmpeg文件系统: ${c.message}`)}u==="none"?await this.normalConversion({input:"input.mp4",output:l,videoCodec:t,crf:i,preset:r,threads:o,performanceMode:s,hardwareAcceleration:n,outputFormat:e}):u==="segment"?await this.segmentedConversion({input:"input.mp4",output:l,videoCodec:t,crf:i,preset:r,threads:o,performanceMode:s,hardwareAcceleration:n,outputFormat:e}):u==="realtime"&&await this.realtimeConversion({input:"input.mp4",output:l,videoCodec:t,crf:i,preset:r,threads:o,performanceMode:s,hardwareAcceleration:n,outputFormat:e}),this.log("正在清理临时文件...");try{await this.ffmpeg.deleteFile("input.mp4"),this.log("已删除输入文件")}catch(c){this.log(`删除输入文件失败: ${c.message}`,"warning")}try{await this.ffmpeg.deleteFile(l),this.log("已删除输出文件")}catch(c){this.log(`删除输出文件失败: ${c.message}`,"warning")}this.log("临时文件清理完成"),this.log("=== 转码完成 ===")}displayConvertedVideo(e,t){const i=document.getElementById("convertedVideoContainer"),r=document.createElement("video");r.src=URL.createObjectURL(e),r.controls=!0,r.autoplay=!0,r.muted=!0,r.style.maxWidth="100%",r.style.maxHeight="400px",i.innerHTML="",i.appendChild(r);const o=document.createElement("a");o.href=r.src,o.download=t,o.textContent=`下载 ${t}`,o.style.display="block",o.style.marginTop="10px",o.style.color="#667eea",o.style.textDecoration="none",i.appendChild(o);const s=document.createElement("button");s.textContent="🔊 取消静音",s.style.marginTop="10px",s.style.padding="8px 16px",s.style.backgroundColor="#667eea",s.style.color="white",s.style.border="none",s.style.borderRadius="5px",s.style.cursor="pointer",s.addEventListener("click",()=>{r.muted=!r.muted,s.textContent=r.muted?"🔊 取消静音":"🔇 静音",!r.muted&&r.paused&&r.play().catch(n=>{this.log(`自动播放失败: ${n.message}`,"warning")})}),i.appendChild(s),r.addEventListener("loadedmetadata",()=>{this.log(`转码后视频信息: ${r.videoWidth}x${r.videoHeight}, ${r.duration.toFixed(2)}秒`),this.attemptAutoPlay(r)}),r.addEventListener("canplay",()=>{this.attemptAutoPlay(r)})}updateProgress(e){const t=document.getElementById("progressFill"),i=document.getElementById("progressText");if(!e||typeof e!="object"){this.log("进度数据无效","warning");return}let r=0;if(e.ratio!==void 0&&e.ratio!==null&&!isNaN(e.ratio)?r=Math.round(e.ratio*100):e.progress!==void 0&&e.progress!==null&&!isNaN(e.progress)?r=Math.round(e.progress*100):this.log("进度比率无效，使用默认值 0%","warning"),r=Math.max(0,Math.min(100,r)),t.style.width=`${r}%`,i.textContent=`转码进度: ${r}%`,e.time!==void 0&&e.time!==null&&!isNaN(e.time)){const o=this.formatTime(e.time);i.textContent+=` | 已处理: ${o}`,r%10===0&&r>0&&this.log(`转码进度: ${r}% - 已处理时间: ${o}`)}if(e.duration!==void 0&&e.duration!==null&&!isNaN(e.duration)&&e.time!==void 0&&e.time!==null&&!isNaN(e.time)){const o=Math.max(0,e.duration-e.time),s=this.formatTime(o);this.log(`详细进度: ${r}% | 已用: ${this.formatTime(e.time)} | 剩余: ${s}`)}this.log(`原始进度数据: ${JSON.stringify(e)}`,"debug")}updatePerformanceMetrics(){const e=this.performanceMetrics,t=document.getElementById("performanceInfo"),i=(e.conversionTime/1e3).toFixed(2),r=((e.convertedSize-e.originalSize)/e.originalSize*100).toFixed(1),o=(e.originalSize/1024/1024/(e.conversionTime/1e3)).toFixed(2);if(document.getElementById("conversionTime").textContent=`${i} 秒`,document.getElementById("fileSizeChange").textContent=`${r>0?"+":""}${r}%`,document.getElementById("processingSpeed").textContent=`${o} MB/s`,performance.memory){const s=(performance.memory.usedJSHeapSize/1024/1024).toFixed(1);document.getElementById("memoryUsage").textContent=`${s} MB`,e.memoryUsage=parseFloat(s)}else document.getElementById("memoryUsage").textContent="不支持";t.style.display="block",this.log(`性能指标 - 时间: ${i}s, 大小变化: ${r}%, 速度: ${o}MB/s`)}log(e,t="info"){if(t==="debug"){this.debugMode&&(console.log(`[FFmpeg Demo DEBUG] ${e}`),this.debugMode&&this.addToLogUI(e,t));return}console.log(`[FFmpeg Demo] ${e}`),this.addToLogUI(e,t)}addToLogUI(e,t="info"){const i=document.getElementById("logSection"),r=document.getElementById("logContent");if(!i||!r){console.warn("日志区域元素不存在");return}i.style.display="block";const o=new Date().toLocaleTimeString(),s=document.createElement("div");s.style.marginBottom="4px";let n="#00ff00";t==="error"&&(n="#ff4444"),t==="warning"&&(n="#ffaa00"),t==="debug"&&(n="#888888"),s.innerHTML=`<span style="color: #888">${o}</span> <span style="color: ${n}">${e}</span>`,r.appendChild(s),r.scrollTop=r.scrollHeight}formatFileSize(e){if(e===0)return"0 Bytes";const t=1024,i=["Bytes","KB","MB","GB"],r=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,r)).toFixed(2))+" "+i[r]}formatTime(e){const t=Math.floor(e/3600),i=Math.floor(e%3600/60),r=Math.floor(e%60);return`${t.toString().padStart(2,"0")}:${i.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}`}buildOptimizedCommand(e){const{input:t,output:i,videoCodec:r,crf:o,preset:s,threads:n,performanceMode:u,hardwareAcceleration:l,outputFormat:h}=e,c=["-i",t];if(l!=="none"){const d=this.getHardwareAccelerationParams(l,r);c.push(...d)}const f=this.getPerformanceParams(u,r,o,s);return c.push(...f),n!=="0"&&c.push("-threads",n),c.push("-c:a","aac","-b:a","128k"),h==="mp4"&&c.push("-movflags","+faststart"),c.push("-y",i),c}getHardwareAccelerationParams(e,t){const i=[];switch(e){case"cuda":i.push("-hwaccel","cuda"),t==="libx264"?i.push("-c:v","h264_nvenc"):t==="libx265"&&i.push("-c:v","hevc_nvenc");break;case"qsv":i.push("-hwaccel","qsv"),t==="libx264"?i.push("-c:v","h264_qsv"):t==="libx265"&&i.push("-c:v","hevc_qsv");break;case"videotoolbox":i.push("-hwaccel","videotoolbox"),t==="libx264"&&i.push("-c:v","h264_videotoolbox");break;case"auto":i.push("-hwaccel","auto");break}return i}getPerformanceParams(e,t,i,r){const o=[];switch(e){case"speed":o.push("-c:v",t),o.push("-crf",Math.max(18,parseInt(i)+4).toString()),o.push("-preset",r==="veryslow"?"medium":"ultrafast"),o.push("-tune","fastdecode");break;case"quality":o.push("-c:v",t),o.push("-crf",Math.min(30,parseInt(i)-2).toString()),o.push("-preset",r==="ultrafast"?"medium":"slow"),o.push("-tune","film");break;case"lowcpu":o.push("-c:v",t),o.push("-crf",Math.max(18,parseInt(i)+6).toString()),o.push("-preset","ultrafast"),o.push("-vf","scale=1280:-2");break;default:o.push("-c:v",t),o.push("-crf",i),o.push("-preset",r);break}return o}getPerformanceModeText(e){return{balanced:"平衡模式",speed:"速度优先",quality:"质量优先",lowcpu:"低CPU占用"}[e]||e}getHardwareAccelerationText(e){return{none:"无",auto:"自动检测",cuda:"CUDA (NVIDIA)",qsv:"Intel QSV",videotoolbox:"VideoToolbox (Mac)"}[e]||e}getStreamingModeText(e){return{none:"禁用",segment:"分段转码",realtime:"实时转码"}[e]||e}async normalConversion(e){const t=this.buildOptimizedCommand(e);this.log(`执行命令: ffmpeg ${t.join(" ")}`),this.log("开始转码处理，请稍候...");try{await this.ffmpeg.exec(t),this.log("转码命令执行完成")}catch(r){throw this.log(`FFmpeg 执行失败: ${r.message}`,"error"),new Error(`转码执行失败: ${r.message}`)}this.log("正在读取转码后的文件...");let i;try{i=await this.ffmpeg.readFile(e.output);const r=new Blob([i],{type:`video/${e.outputFormat}`});this.log(`转码后文件大小: ${this.formatFileSize(r.size)}`),this.performanceMetrics.convertedSize=r.size,this.performanceMetrics.conversionTime=performance.now()-this.startTime,this.log("正在生成转码后的视频预览..."),this.displayConvertedVideo(r,e.output),this.updatePerformanceMetrics()}catch(r){throw this.log(`读取转码后文件失败: ${r.message}`,"error"),new Error(`无法读取转码后的文件: ${r.message}`)}}async segmentedConversion(e){this.log("开始分段转码处理...");const t=10,i=[];for(let o=0;o<5;o++){const s=o*t,n=`segment_${o}.${e.outputFormat}`,u=["-ss",s.toString(),"-i",e.input,"-t",t.toString(),"-c:v",e.videoCodec,"-crf",e.crf,"-preset",e.preset,"-c:a","aac","-b:a","128k","-y",n];this.log(`转码第 ${o+1} 段 (开始时间: ${s}s)...`);try{await this.ffmpeg.exec(u)}catch(h){this.log(`第 ${o+1} 段转码失败: ${h.message}`,"error");continue}const l=await this.ffmpeg.readFile(n);i.push(l),await this.ffmpeg.deleteFile(n),this.log(`第 ${o+1} 段转码完成`)}this.log("合并分段文件...");const r=new Blob(i,{type:`video/${e.outputFormat}`});this.performanceMetrics.convertedSize=r.size,this.performanceMetrics.conversionTime=performance.now()-this.startTime,this.log("正在生成转码后的视频预览..."),this.displayConvertedVideo(r,e.output),this.updatePerformanceMetrics(),this.log("分段转码完成")}async realtimeConversion(e){this.log("开始实时转码和流式播放...");let t=0;const i=2;for(;t<i;){t++,this.log(`流式播放尝试 ${t}/${i}`);try{this.supportedMimeType=null,this.isStreaming=!0,this.streamQueue=[],this.bufferMonitor={totalChunksAdded:0,totalChunksProcessed:0,totalBytesProcessed:0,lastErrorTime:null,consecutiveErrors:0,bufferHealth:"good",lastBufferCheck:Date.now()},this.startPerformanceMonitoring(),await this.initMediaSource();const r=8;let o=0,s=0,n=0;const u=3;for(s=await this.getVideoDuration(e.input),this.log(`视频总时长: ${s}秒`),this.sourceBuffer&&(this.sourceBuffer.timestampOffset=0,this.log("设置 SourceBuffer 时间戳偏移为 0"));o*r<s&&this.isStreaming;){if(n>=u)throw this.log("连续错误过多，停止流式播放","error"),new Error("流式播放连续错误过多");const l=o*r;let h=".ts";this.supportedMimeType&&(this.supportedMimeType.includes("video/mp4")?h=".mp4":this.supportedMimeType.includes("video/webm")&&(h=".webm"));const c=`chunk_${o}${h}`;try{this.log(`转码第 ${o+1} 片 (开始时间: ${l}s, 时长: ${r}s)...`),await this.transcodeChunk({input:e.input,output:c,startTime:l,duration:r,videoCodec:e.videoCodec,crf:e.crf,preset:"ultrafast",outputFormat:h.substring(1)});let f;try{f=await this.ffmpeg.readFile(c),console.log("读取分片数据成功",f),this.sourceBuffer&&o>0&&(this.sourceBuffer.timestampOffset=l,this.log(`更新时间戳偏移为: ${l}s`)),await this.addChunkToStreamWithRetry(f,3)}catch(d){throw this.log(`读取分片文件失败: ${d.message}`,"error"),new Error(`无法读取分片文件: ${d.message}`)}try{await this.ffmpeg.deleteFile(c)}catch(d){this.log(`删除分片文件失败: ${d.message}`,"warning")}o++,n=0,this.log(`第 ${o} 片已添加到播放队列 (已处理时长: ${o*r}s)`),await new Promise(d=>setTimeout(d,200))}catch(f){if(n++,this.log(`转码第 ${o+1} 片失败: ${f.message}`,"error"),console.error("分片转码错误:",f),o*r>=s-r){this.log("已处理到最后一个分片，忽略错误","warning");break}await new Promise(d=>setTimeout(d,1e3))}}this.log("所有分片转码完成");break}catch(r){if(this.log(`流式播放尝试 ${t} 失败: ${r.message}`,"error"),console.error("实时转码错误:",r),this.stopStreaming(),t>=i){this.log("流式播放多次尝试失败，降级到普通转码模式","warning"),await this.fallbackToNormalConversion(e);return}this.log("等待 2 秒后重试..."),await new Promise(o=>setTimeout(o,2e3))}finally{this.isStreaming=!1,this.stopPerformanceMonitoring()}}this.performanceMetrics.conversionTime=performance.now()-this.startTime,this.updatePerformanceMetrics(),this.log("实时转码和流式播放完成")}async initMediaSource(){return new Promise((e,t)=>{if(!window.MediaSource){t(new Error("浏览器不支持MediaSource API"));return}this.mediaSource=new MediaSource,this.mediaSource.addEventListener("sourceopen",()=>{this.log("MediaSource已打开");try{const i=['video/mp2t; codecs="avc1.42E01E,mp4a.40.2"','video/mp4; codecs="avc1.42E01E,mp4a.40.2"','video/webm; codecs="vp9,opus"'];let r=null;for(const o of i)if(this.log(`检查 MIME 类型支持: ${o}`),MediaSource.isTypeSupported(o)){r=o;break}if(!r){t(new Error("浏览器不支持任何流媒体视频格式"));return}this.log(`使用支持的 MIME 类型: ${r}`),this.supportedMimeType=r,this.sourceBuffer=this.mediaSource.addSourceBuffer(r),console.log("SourceBuffer 创建成功",this.sourceBuffer),this.sourceBuffer.addEventListener("updateend",()=>{this.processStreamQueue()}),this.sourceBuffer.addEventListener("error",o=>{const s=o.message||o.error||JSON.stringify(o);this.log(`SourceBuffer错误: ${s}`,"error"),console.error("SourceBuffer错误详情:",o),this.diagnoseSourceBufferError(o)}),this.sourceBuffer.addEventListener("abort",o=>{this.log("SourceBuffer操作被中止","warning")}),this.log("SourceBuffer创建成功"),e()}catch(i){this.log(`创建SourceBuffer失败: ${i.message}`,"error"),console.error("创建SourceBuffer失败详情:",i),t(i)}}),this.mediaSource.addEventListener("error",i=>{const r=i.message||i.error||JSON.stringify(i);this.log(`MediaSource错误: ${r}`,"error"),console.error("MediaSource错误详情:",i)}),this.createStreamingVideo()})}createStreamingVideo(){const e=document.getElementById("convertedVideoContainer");e.innerHTML="";const t=document.createElement("video");t.src=URL.createObjectURL(this.mediaSource),t.controls=!0,t.autoplay=!0,t.muted=!0,t.style.maxWidth="100%",t.style.maxHeight="400px",t.style.backgroundColor="#000",t.addEventListener("error",o=>{this.log(`视频元素错误: ${t.error?t.error.message:"未知错误"}`,"error"),this.updateStreamingStatus("视频播放错误"),this.stopStreaming()}),e.appendChild(t);const i=document.createElement("div");i.id="streamingStatus",i.style.marginTop="10px",i.style.padding="10px",i.style.backgroundColor="#f0f0f0",i.style.borderRadius="5px",i.style.fontSize="14px",i.textContent="正在准备流式播放...",e.appendChild(i);const r=document.createElement("button");r.textContent="🔊 取消静音",r.style.marginTop="10px",r.style.padding="8px 16px",r.style.backgroundColor="#667eea",r.style.color="white",r.style.border="none",r.style.borderRadius="5px",r.style.cursor="pointer",r.addEventListener("click",()=>{t.muted=!t.muted,r.textContent=t.muted?"🔊 取消静音":"🔇 静音",!t.muted&&t.paused&&t.play().catch(o=>{this.log(`自动播放失败: ${o.message}`,"warning")})}),e.appendChild(r),t.addEventListener("loadstart",()=>{this.updateStreamingStatus("开始加载...")}),t.addEventListener("loadedmetadata",()=>{this.updateStreamingStatus("元数据加载完成"),this.attemptAutoPlay(t)}),t.addEventListener("canplay",()=>{this.updateStreamingStatus("可以播放"),this.attemptAutoPlay(t)}),t.addEventListener("play",()=>{this.updateStreamingStatus("正在播放")}),t.addEventListener("pause",()=>{this.updateStreamingStatus("已暂停")}),t.addEventListener("waiting",()=>{this.updateStreamingStatus("缓冲中...")}),t.addEventListener("playing",()=>{this.updateStreamingStatus("正在播放")}),t.addEventListener("ended",()=>{this.updateStreamingStatus("播放结束")}),t.addEventListener("stalled",()=>{this.updateStreamingStatus("网络卡顿")}),this.waitForFirstChunkAndPlay(t)}updateStreamingStatus(e){const t=document.getElementById("streamingStatus");t&&(t.textContent=`流式播放状态: ${e}`)}async attemptAutoPlay(e){if(!e||!this.mediaSource||this.mediaSource.readyState!=="open"){this.log("视频或 MediaSource 不可用，无法自动播放","warning");return}if(this.sourceBuffer&&this.sourceBuffer.buffered.length>0&&this.sourceBuffer.buffered.end(this.sourceBuffer.buffered.length-1)<2){this.log("缓冲数据不足，等待更多数据...","warning");return}if(e.paused)try{await e.play(),this.log("视频自动播放成功"),this.updateStreamingStatus("正在播放")}catch(t){this.log(`自动播放失败: ${t.message}`,"warning"),this.updateStreamingStatus("点击播放按钮开始播放")}}waitForFirstChunkAndPlay(e){const t=setInterval(()=>{if(!this.sourceBuffer||!this.mediaSource||this.mediaSource.readyState!=="open"){clearInterval(t),this.log("MediaSource 或 SourceBuffer 已不可用","warning");return}let i=!1;try{i=this.streamQueue.length>0||this.sourceBuffer&&this.sourceBuffer.buffered.length>0}catch{clearInterval(t),this.log("SourceBuffer 已被移除，停止等待","warning");return}i&&(clearInterval(t),this.log("检测到视频数据，尝试自动播放"),setTimeout(()=>{this.attemptAutoPlay(e)},500))},100);setTimeout(()=>{clearInterval(t),e&&e.paused&&this.log("等待视频数据超时","warning")},3e4)}async transcodeChunk(e){let t="mpegts";this.supportedMimeType&&(this.supportedMimeType.includes("video/mp2t")?t="mpegts":this.supportedMimeType.includes("video/mp4")?t="mp4":this.supportedMimeType.includes("video/webm")&&(t="webm")),this.log(`使用输出格式: ${t}`);let i=[];t==="mpegts"?i=["-ss",e.startTime.toString(),"-i",e.input,"-t",e.duration.toString(),"-c:v",e.videoCodec,"-crf",e.crf,"-preset","ultrafast","-c:a","aac","-b:a","128k","-mpegts_m2ts_mode","1","-f","mpegts","-y",e.output]:i=["-ss",e.startTime.toString(),"-i",e.input,"-t",e.duration.toString(),"-c:v",e.videoCodec,"-crf",e.crf,"-preset","ultrafast","-c:a","aac","-b:a","128k","-profile:v","baseline","-level","3.0","-movflags","+frag_keyframe+empty_moov+faststart+default_base_moof","-frag_duration",e.duration.toString(),"-f",t,"-y",e.output];try{await this.ffmpeg.exec(i),this.log(`分片转码完成: ${e.output} (开始时间: ${e.startTime}s, 时长: ${e.duration}s)`)}catch(r){throw this.log(`分片转码失败: ${r.message}`,"error"),new Error(`分片转码失败: ${r.message}`)}}addChunkToStream(e){if(!this.isStreaming){this.log("流式播放已停止，跳过添加分片","warning");return}this.streamQueue.push(e),this.streamQueue.length===1&&this.log("第一个视频分片已添加，准备播放"),this.processStreamQueue()}async addChunkToStreamWithRetry(e,t=3){for(let i=1;i<=t;i++)try{return this.log(`尝试添加分片到流 (第 ${i} 次)`),new Promise((r,o)=>{(()=>{if(!this.isStreaming){o(new Error("流式播放已停止"));return}this.streamQueue.push(e),this.processStreamQueue();const n=setTimeout(()=>{this.streamQueue.length===0?r():o(new Error("添加分片超时"))},5e3),u=setInterval(()=>{this.streamQueue.length===0&&(clearTimeout(n),clearInterval(u),r())},100)})()})}catch(r){if(this.log(`第 ${i} 次添加分片失败: ${r.message}`,"warning"),i===t)throw new Error(`添加分片到流失败，已重试 ${t} 次`);await new Promise(o=>setTimeout(o,1e3))}}async fallbackToNormalConversion(e){this.log("开始降级到普通转码模式...","warning");try{this.updateStreamingStatus("正在降级到普通转码模式..."),await this.normalConversion(e),this.log("已成功降级到普通转码模式","info")}catch(t){throw this.log(`降级转码也失败: ${t.message}`,"error"),t}}processStreamQueue(){if(!this.sourceBuffer||!this.mediaSource||this.mediaSource.readyState!=="open"){this.log("MediaSource 或 SourceBuffer 不可用，停止处理队列","warning"),this.streamQueue=[];return}if(this.sourceBuffer.updating||this.streamQueue.length===0)return;const e=document.querySelector("#convertedVideoContainer video");if(e&&e.error){this.log(`视频元素错误: ${e.error.message}`,"error"),this.stopStreaming();return}const t=this.analyzeBufferHealth();if(t.shouldWait){this.log(t.message,"warning"),setTimeout(()=>this.processStreamQueue(),t.waitTime);return}const i=this.streamQueue.shift();try{this.log(`正在添加分片到SourceBuffer，大小: ${i.length} 字节`),this.bufferMonitor.totalChunksAdded++,this.bufferMonitor.totalBytesProcessed+=i.length;const r=o=>{this.sourceBuffer.removeEventListener("error",r),this.bufferMonitor.lastErrorTime=Date.now(),this.bufferMonitor.consecutiveErrors++,this.bufferMonitor.bufferHealth="poor",this.log("分片添加过程中发生错误","error"),this.handleSourceBufferErrorRecovery()};this.sourceBuffer.addEventListener("error",r),setTimeout(()=>{try{if(this.sourceBuffer.appendBuffer(i),this.log(`已添加分片到播放队列，剩余队列: ${this.streamQueue.length}`),this.bufferMonitor.totalChunksProcessed++,this.bufferMonitor.consecutiveErrors=0,this.bufferMonitor.bufferHealth="good",this.sourceBuffer.removeEventListener("error",r),e&&e.paused){const o=this.sourceBuffer.buffered.length;let s=0;o>0&&(s=this.sourceBuffer.buffered.end(o-1)),s>=3&&setTimeout(()=>{this.attemptAutoPlay(e)},500)}}catch(o){this.sourceBuffer.removeEventListener("error",r),this.handleAppendError(o,i)}},0)}catch(r){this.log(`添加分片失败: ${r.message}`,"error"),console.error("SourceBuffer appendBuffer error:",r),this.handleAppendError(r,i)}}analyzeBufferHealth(){const e={shouldWait:!1,waitTime:1e3,message:""};try{const t=document.querySelector("#convertedVideoContainer video");if(!this.sourceBuffer||!this.sourceBuffer.buffered||this.sourceBuffer.buffered.length===0)return e;const i=this.sourceBuffer.buffered.end(this.sourceBuffer.buffered.length-1),r=t?t.currentTime:0,o=i-r;if(this.sourceBuffer.buffered.length>5)return e.shouldWait=!0,e.message="缓冲区段数过多，暂停添加",e.waitTime=2e3,e;if(o>30)return e.shouldWait=!0,e.message=`缓冲区提前过多 (${o.toFixed(1)}s)，暂停添加`,e.waitTime=2e3,e;if(this.streamQueue.length>5)return e.shouldWait=!0,e.message="队列过长，暂停添加",e.waitTime=500,e;if(performance.memory){const s=performance.memory.usedJSHeapSize,n=performance.memory.totalJSHeapSize,u=s/n;if(u>.8)return e.shouldWait=!0,e.message=`内存使用过高 (${(u*100).toFixed(1)}%)，暂停添加`,e.waitTime=5e3,e}}catch(t){this.log(`分析缓冲区健康状态失败: ${t.message}`,"warning"),e.shouldWait=!0,e.message="缓冲区分析失败，暂停添加",e.waitTime=2e3}return e}startPerformanceMonitoring(){this.performanceMonitor&&clearInterval(this.performanceMonitor),this.performanceMonitor=setInterval(()=>{this.logPerformanceStats()},1e4)}stopPerformanceMonitoring(){this.performanceMonitor&&(clearInterval(this.performanceMonitor),this.performanceMonitor=null)}logPerformanceStats(){const e={totalChunksAdded:this.bufferMonitor.totalChunksAdded,totalChunksProcessed:this.bufferMonitor.totalChunksProcessed,totalBytesProcessed:this.bufferMonitor.totalBytesProcessed,queueLength:this.streamQueue.length,bufferHealth:this.bufferMonitor.bufferHealth,consecutiveErrors:this.bufferMonitor.consecutiveErrors,isStreaming:this.isStreaming,memoryUsage:this.performanceMetrics.memoryUsage};this.log(`性能统计: ${JSON.stringify(e)}`,"debug"),e.consecutiveErrors>5&&(this.log("检测到连续错误过多，触发恢复机制","warning"),this.handleSourceBufferErrorRecovery())}handleAppendError(e,t){switch(this.log(`处理 appendBuffer 错误: ${e.name} - ${e.message}`,"error"),e.name){case"QuotaExceededError":this.log("缓冲区配额超出，尝试清理旧数据","warning"),this.handleBufferQuotaExceeded();break;case"InvalidStateError":this.log("SourceBuffer 状态无效，尝试恢复","warning"),this.handleSourceBufferErrorRecovery();break;case"NotSupportedError":this.log("不支持的数据格式，尝试重新初始化MediaSource","warning"),this.handleFormatIncompatibility();break;default:this.log(`未知错误类型: ${e.name}，尝试恢复`,"warning"),this.handleSourceBufferErrorRecovery();break}}handleFormatIncompatibility(){this.log("处理格式不兼容问题...","warning"),this.supportedMimeType&&this.supportedMimeType.includes("video/mp2t")?(this.log("当前使用MPEG-TS格式，尝试切换到MP4格式","info"),this.stopStreaming(),setTimeout(()=>{if(this.isStreaming){this.log("重新初始化MediaSource，优先使用MP4格式","info");const e=this.supportedMimeType;this.supportedMimeType='video/mp4; codecs="avc1.42E01E,mp4a.40.2"',this.initMediaSource().catch(t=>{this.log(`重新初始化失败: ${t.message}`,"error"),this.supportedMimeType=e})}},2e3)):this.stopStreaming()}handleBufferQuotaExceeded(){try{if(this.sourceBuffer&&this.sourceBuffer.buffered.length>1){const e=this.sourceBuffer.buffered.start(1);this.sourceBuffer.remove(0,e),this.log(`已移除 0-${e.toFixed(2)} 的缓冲区`,"info"),setTimeout(()=>this.processStreamQueue(),100)}else this.log("缓冲区已满且无法清理，停止流式播放","warning"),this.stopStreaming()}catch(e){this.log(`清理缓冲区失败: ${e.message}`,"error"),this.stopStreaming()}}stopStreaming(){this.log("正在停止流式播放...","info"),this.isStreaming=!1,this.streamQueue=[],this.cleanupMediaSource(),this.updateStreamingStatus("流式播放已停止"),this.log("流式播放已停止")}cleanupMediaSource(){try{if(this.sourceBuffer)try{if(this.sourceBuffer.removeEventListener("updateend",this.processStreamQueue),this.sourceBuffer.removeEventListener("error",this.handleSourceBufferError),this.sourceBuffer.updating){this.log("等待 SourceBuffer 更新完成...","debug"),setTimeout(()=>this.cleanupMediaSource(),100);return}this.mediaSource&&this.mediaSource.sourceBuffers.length>0&&(this.mediaSource.removeSourceBuffer(this.sourceBuffer),this.log("已从 MediaSource 移除 SourceBuffer","debug"))}catch(t){this.log(`移除 SourceBuffer 失败: ${t.message}`,"warning")}finally{this.sourceBuffer=null}if(this.mediaSource)try{this.mediaSource.readyState==="open"&&(this.mediaSource.endOfStream(),this.log("MediaSource 流已结束","debug"))}catch(t){this.log(`结束 MediaSource 流失败: ${t.message}`,"warning")}finally{this.mediaSource=null}const e=document.querySelector("#convertedVideoContainer video");e&&e.src.startsWith("blob:")&&(URL.revokeObjectURL(e.src),this.log("已清理视频元素的 MediaSource URL","debug"))}catch(e){this.log(`清理 MediaSource 资源时出错: ${e.message}`,"error"),console.error("清理资源失败:",e)}}diagnoseSourceBufferError(e){try{if(this.log("=== SourceBuffer 错误诊断 ===","debug"),this.mediaSource?this.log(`MediaSource 状态: ${this.mediaSource.readyState}`,"debug"):this.log("MediaSource 对象不存在","error"),this.sourceBuffer){this.log(`SourceBuffer 更新状态: ${this.sourceBuffer.updating}`,"debug"),this.log(`SourceBuffer 模式: ${this.sourceBuffer.mode}`,"debug");try{if(this.sourceBuffer.buffered&&this.sourceBuffer.buffered.length>0){this.log(`缓冲区段数: ${this.sourceBuffer.buffered.length}`,"debug");for(let i=0;i<this.sourceBuffer.buffered.length;i++){const r=this.sourceBuffer.buffered.start(i),o=this.sourceBuffer.buffered.end(i);this.log(`缓冲区 ${i}: ${r.toFixed(2)} - ${o.toFixed(2)}`,"debug")}}else this.log("SourceBuffer 缓冲区为空","debug")}catch(i){this.log(`访问缓冲区失败: ${i.message}`,"warning")}this.log(`时间戳偏移: ${this.sourceBuffer.timestampOffset}`,"debug"),this.log(`追加窗口: ${this.sourceBuffer.appendWindowStart} - ${this.sourceBuffer.appendWindowEnd}`,"debug")}else this.log("SourceBuffer 对象不存在","error");this.log(`流队列长度: ${this.streamQueue.length}`,"debug"),this.log(`是否正在流式播放: ${this.isStreaming}`,"debug");const t=document.querySelector("#convertedVideoContainer video");t&&(this.log(`视频当前时间: ${t.currentTime}`,"debug"),this.log(`视频就绪状态: ${t.readyState}`,"debug"),this.log(`视频网络状态: ${t.networkState}`,"debug"),t.error&&this.log(`视频错误: ${t.error.message}`,"error")),this.log("=== 诊断结束 ===","debug"),this.handleSourceBufferErrorRecovery()}catch(t){this.log(`诊断过程中出错: ${t.message}`,"error")}}handleSourceBufferErrorRecovery(){if(this.log("尝试 SourceBuffer 错误恢复...","warning"),this.sourceBuffer&&this.mediaSource&&this.mediaSource.readyState==="open")try{if(this.streamQueue=[],this.sourceBuffer.updating){this.log("SourceBuffer 正在更新，等待完成...","warning"),setTimeout(()=>this.handleSourceBufferErrorRecovery(),1e3);return}this.safeEndStream(),this.log("SourceBuffer 错误恢复处理完成","info");return}catch(e){this.log(`恢复策略1失败: ${e.message}`,"error")}this.log("执行完全重置策略...","warning"),this.stopStreaming(),setTimeout(()=>{this.isStreaming&&(this.log("尝试重新初始化 MediaSource...","info"),this.initMediaSource().catch(e=>{this.log(`重新初始化失败: ${e.message}`,"error")}))},2e3)}safeEndStream(){if(this.mediaSource&&this.mediaSource.readyState==="open")try{this.sourceBuffer&&!this.sourceBuffer.updating?(this.mediaSource.sourceBuffers.length>0&&(this.mediaSource.removeSourceBuffer(this.sourceBuffer),this.log("已移除 SourceBuffer","debug")),this.mediaSource.endOfStream(),this.log("MediaSource 流已安全结束","debug")):this.log("SourceBuffer 正在更新或不可用，跳过结束流","warning")}catch(e){this.log(`结束MediaSource流失败: ${e.message}`,"warning"),console.error("结束流失败详情:",e)}}async getVideoDuration(e){const t=["-i",e,"-f","null","-"];try{return await this.ffmpeg.exec(t),this.log("使用默认视频时长: 60秒"),60}catch(i){return this.log(`获取视频时长失败: ${i.message}`,"warning"),this.log("使用默认视频时长: 60秒"),60}}}document.addEventListener("DOMContentLoaded",()=>{new y});window.addEventListener("error",a=>{console.error("全局错误:",a.error),a.error&&a.error.name==="InvalidStateError"&&console.warn("检测到 SourceBuffer 状态错误，可能是正常的状态清理过程")});window.addEventListener("unhandledrejection",a=>{console.error("未处理的 Promise 拒绝:",a.reason)});
//# sourceMappingURL=index-DDhAt2_Y.js.map
